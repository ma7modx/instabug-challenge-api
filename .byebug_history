c
JSON.parse(actual_bug.to_json)[0] == JSON.parse(@response.body)["bug"]
JSON.parse(actual_bug.to_json)[0]
JSON.parse(actual_bug.to_json)
actual_bug.to_json
actual_bug.to_hash
actual_bug.to_h
actual_bug
JSON.parse(@response.body)["bug"]
JSON.parse(@response.body)["body"]
JSON.parse(@response.body)
Json.parse(@response.body)
Json.parse(@response.body)["bug"]
@response.body["bug"]
@response.body
actual_bug.to_json
actual_bug
c
@response.body
actual_count
n
actual_count
c
response.body
response.boud
actual_count
n
c
JSON.parse(@response.body)["count"]
@response.body
n
response.body
@response.body
c
@response.status
@response.body
@response
response.body
response
n
@count
n
request.headers["application-token"]
c
response.count
response.body
c
response.body
actual_count
n
c
n
c
Bug.count
old_count
c
Bug.last
c
Bug.last
n
Bug.last
n
Bug.last
n
Bug.last
c
Bug.last
c
nc
n
@bug.number
n
c
Bug.last
c
@bug.number
Bug.last
n
@state
@bug
n
c
@bug.number
Bug.last
n
queue
n
@state
n
@bug
n
@bug
n
@bug
n
bug_params
c
Bug.count
n
Bug.count
n
Bug.count
c
request.headers["application-token"]
c
Bug.count
n
c
Bug.count
Bug.last
n
c
request.headers["application-token"]
request.headers
request.headers["application-token"]
c
n
request.headers["application-token"]
c
request.headers["application-token"]
c
request.headers["application-token"]
state_params
bug_params
c
v
n
c
v
c
@bug
n
c
n
c
n
save_objects
n
c
save_objects
n
c
n
c
n
queue
n
c
n
get_bunny_channel
c
get_bunny_channel
exit
self.bunny_channel
bunny_channel
c
exception
n
@state
n
@bug
n
Bug.last
n
c
Rails.application.config.rabbit_channel
Rails.application.config.rabbit_connection
c
@bug
n
application_token
n
params[:number]
c
exception.message
exception
c
n
c
n
c
@bug.errors
n
c
@bug.errors
@bug
n
c
n
@bug.errors
n
c
n
c
Bug.all
n
Bug.all
@bug
n
c
State.create(params[:state])
params[:state]
@state
n
Bug.all
@bug
n
c
n
c
Bug.all
@bug
n
Bug.get_next_bug_number(self.application_token)
n
c
@bug.save!
@bug.save
@state
@bug.errors.any?
@bug.errors
@bug
n
params[:state]
@bug
bug
n
c
Bug.all
state
bug.errors
n
bug
n
c
bug.errors
bug
n
bug
n
bug
n
